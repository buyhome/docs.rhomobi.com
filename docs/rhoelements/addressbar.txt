
#AddressBar Module
<span class="label label-info">HTML</span> <span class="label label-warning">JAVASCRIPT</span> <span class="label label-important">RUBY</span> <span class="label label-inverse">RHOELEMENTS</span>

<b>
The AddressBar Module is used to set the parameters of the address bar. The address bar is similar to the address bar provided by Internet Explorer and stores a history of visited URLs. Press the 'Go' button or enter key to navigate to the typed URI.
</b>

##Syntax

<table class="re-table"><tr><th class="tableHeading">addressBar (Module) &lt;META&gt; Syntax
</th></tr><tr><td class="clsSyntaxCells clsOddRow"><p>&lt;META HTTP-Equiv="AddressBar" content="[parameter]"&gt;</p></td></tr></table>
<table class="re-table"><tr><th class="tableHeading">AddressBar JavaScript Object Syntax:</th></tr><tr><td class="clsSyntaxCells clsOddRow">
By default the JavaScript Object <b>'addressBar'</b> will exist on the current page and can be used to interact directly with the addressBar.
</td></tr><tr><td class="clsSyntaxCells clsEvenRow">
To Set addressBar parameters via JavaScript use the following syntax: addressbar.parameter = 'value'; remembering to enclose your value in quotes where appropriate.  
<P />e.g. <b>addressBar</b>.left = 'value';
</td></tr><tr><td class="clsSyntaxCells clsOddRow">							
To set multiple <a href="../Resources/../Getting Started/EMMLOverview.html">EMML</a> parameters / events on a single line use the following syntax: addressbar.setEMML("[Your EMML Tags]");
<P />
e.g. <b>addressBar</b>.setEMML("left:<i>value</i>");							
</td></tr></table>

<table class="re-table"><tr><th class="tableHeading">AddressBar Ruby Object Syntax:</th></tr><tr><td class="clsSyntaxCells clsOddRow">
By default the Ruby Object <b>'AddressBar'</b> will exist on the current page and can be used to interact directly with the AddressBar. All Methods, Parameters and Events are the same as Javascript, however, notice <b>'AddressBar'</b> needs to start with an uppercase letter. Another difference in Ruby is that methods do not end in <b>'()'</b></td></tr><tr><td class="clsSyntaxCells clsEvenRow">
To Set AddressBar parameters via Ruby use the following syntax: AddressBar.parameter = 'value' remembering to enclose your value in quotes where appropriate.  
<P />e.g. <b>AddressBar</b>.left = 'value'
</td></tr><tr><td class="clsSyntaxCells clsOddRow" /></tr></table>



##Parameters


Items listed in this section indicate parameters, or attributes which can be set.
<table class="re-table"><col width="20%" /><col width="20%" /><col width="38%" /><col width="22%" /><tr><th class="tableHeading">Name</th><th class="tableHeading">Possible Values</th><th class="tableHeading">Description</th><th class="tableHeading">Default Value</th></tr><tr><td class="clsSyntaxCells clsOddRow"><b>left:[Value]
</b></td><td class="clsSyntaxCells clsOddRow">Positive number, representing pixels</td><td class="clsSyntaxCells clsOddRow">Sets the X position of the address bar.</td><td class="clsSyntaxCells clsOddRow">0</td></tr><tr><td class="clsSyntaxCells clsEvenRow"><b>top:[Value]
</b></td><td class="clsSyntaxCells clsEvenRow">Positive number, representing pixels</td><td class="clsSyntaxCells clsEvenRow">Sets the Y position of the address bar.</td><td class="clsSyntaxCells clsEvenRow">0</td></tr><tr><td class="clsSyntaxCells clsOddRow"><b>width:[Value]
</b></td><td class="clsSyntaxCells clsOddRow">Positive number, representing pixels</td><td class="clsSyntaxCells clsOddRow">Sets the width of the address bar.</td><td class="clsSyntaxCells clsOddRow">Most of the screen width</td></tr><tr><td class="clsSyntaxCells clsEvenRow"><b>visibility:[Value]
</b></td><td class="clsSyntaxCells clsEvenRow">visible, hidden</td><td class="clsSyntaxCells clsEvenRow">Sets the visibility of the address bar</td><td class="clsSyntaxCells clsEvenRow">Hidden</td></tr></table>
<table class="re-table"><col width="78%" /><col width="8%" /><col width="1%" /><col width="5%" /><col width="1%" /><col width="5%" /><col width="2%" /></table>



##Remarks


###Default Positions
By default this control will be placed a the top of the screen. On Windows Mobile if the 'FullScreen' configuration setting is disabled the control will need to be moved, otherwise it will appear beneath the task bar.


###Switching to Other Applications
All controls are designed to be shown on top of RhoElements. If you require to switch to an application other than RhoElements you should minimize RhoElements to ensure the buttons do not remain shown. (Not applicable to Enterprise Tablet)


###Screen Orientation
When the screen orientation changes, either using the ScreenOrientation tag or by rotating a device with hardware support, the command areas will automatically move and resize to fit the new layout. However the buttons themselves are not moved and in some cases this may result in them being off the screen or not in the expected position. If so they must be moved manually by detecting the ScreenOrientationEvent.


<table class="re-table"><tr><th class="tableHeading">Supported Devices</th><td class="clsSyntaxCell clsOddRow">All supported touch devices.</td></tr><tr><th class="tableHeading">Persistence</th><td class="clsSyntaxCell clsEvenRow">Persistent - Changes to this module will persist when navigating to a new page.</td></tr><tr><th class="tableHeading">Minimum Requirements</th><td class="clsSyntaxCell clsOddRow">None.</td></tr></table>


##Examples

The following example shows the address bar, sets the left and top coordinates to 50, and the width to 100.

	<META HTTP-Equiv="AddressBar" Content="visibility:visible">
	<META HTTP-Equiv="AddressBar" Content="left:50">
	<META HTTP-Equiv="AddressBar" Content="top:50">
	<META HTTP-Equiv="AddressBar" Content="width:100">
	
The following example shows the address bar, sets the left and top coordinates to 0, and the width to 50.

	<META HTTP-Equiv="AddressBar" Content="left:0; top:0; width:50">
	


