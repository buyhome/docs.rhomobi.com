# Rho::NativeTabbar API
<span class="label label-important">RUBY</span>&nbsp;<span class="label label-inverse">RHOELEMENTS</span>&nbsp;<span class="label">RHODES</span>&nbsp;

The NativeTabbar methods let you customize the Rhodes tabbar at runtime. Refer to [Native Tabbar Control in User Interface](/rhodes/ui#native-tabbar-control) and [NativeTabbarTest in Rhodes-System-Api-Samples](https://github.com/rhomobile/rhodes-system-api-samples/tree/master/app/NativeTabbarTest/) for examples.

## Tab Elements

Several of the NativeTabbar use a tabs parameter, which is a list of name/value pairs from the following list of tab elements.

<table border="1">
<tr>
	<td><code>:label</code></td>
	<td>Visible label to display on the tabbar.</td>
</tr>
<tr>
	<td><code>:action</code></td>
	<td>Path to your rhodes action; i.e. ‘/app/Account’ would load the Account index action.</td>
</tr>
<tr>
	<td><code>:icon</code></td>
	<td>Relative path to tabbar item icon in your rhodes app; typically located in /public/images/</td>
</tr>
<tr>
	<td><code>:reload</code></td>
	<td>(optional) true to reload the tab action, false otherwise (default = false).</td>
</tr>
<tr>
	<td><code>:selected_color</code></td>
	<td>(optional) Change the selected color of this tab (if you use it on Android, define it for all tabs and define :background_color for TabBar).</td>
</tr>
<tr>
	<td><code>:disabled</code></td>
	<td>(optional) Disable this tab.</td>
</tr>
<tr>
	<td><code>:web_bkg_color</code></td>
	<td>(optional) int hex value (for example, 0x7F7F7F). Background color for tab. Use when your application background color is not white for removing blink during switch tabs.</td>
</tr>
<tr>
	<td><code>:use_current_view_for_tab</code></td>
	<td>(optional) Smooth transfer WebView from current view into this Tab and make this Tab active. Defaults to false. Only one Tab can have this parameter.</td>
</tr>
</table>

## create

Removes the current tabbar and replaces it with this one.

	:::ruby
	Rho::NativeTabbar.create(tab-elements, callback)

<table border="1">
<tr>
	<td><code>tab-elements</code></td>
	<td>Name/value array for the tabbar, such as <code>{:label => 'Main page',  :action => '/app', :icon => '/public/images/bar/colored_btn.png', :reload => true}</code></td>
</tr>
<tr>
	<td><code>callback</code></td>
	<td>(optional) Callback method for a change tab event.</td>
</tr>
</table>

## create_vertical

Creates a vertical tabbar on the iPad, a regular tabbar on other platforms.

	:::ruby
	Rho::NativeTabbar.create_vertical(tabs)

<table border="1">
<tr>
	<td><code>tabs</code></td>
	<td>Name/value array for the tabbar, such as <code>{:label => 'Main page',  :action => '/app', :icon => '/public/images/bar/colored_btn.png', :reload => true}</code></td>
</tr>
</table>

## get_current_tab

Returns the current tab index.

	:::ruby
	Rho::NativeTabbar.get_current_tab

## remove

Removes the current tabbar. Does nothing if there is no active tabbar.

	:::ruby
	Rho::NativeTabbar.remove

## set_tab_badge

Set the iPhone badge to tab (only for iOS devices).

	:::ruby
	Rho::NativeTabbar.set_tab_badge( tab_index, iPhone_badge)

<table border="1">
<tr>
	<td><code>tab_index</code></td>
	<td>The index for this tab (index numbered from 0 to total tabs - 1).</td>
</tr>
<tr>
	<td><code>iPhone_badge</code></td>
	<td>String for iPhone badge, such as '12'.</td>
</tr>
</table>

## switch_tab

Switch active tab to second.

	:::ruby
	Rho::NativeTabbar.switch_tab(tab_index)

<table border="1">
<tr>
	<td><code>tab_index</code></td>
	<td>Switch to this tab. tabs are numbered from 0 to total of tabs - 1.</td>
</tr>
</table>

